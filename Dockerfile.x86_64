FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=america/los_angeles
ENV PIP_ROOT_USER_ACTION=ignore
ENV PATH=/root/miniforge3/bin:$PATH

SHELL ["/bin/bash", "--login", "-c"]

RUN apt update && \
    apt install --no-install-recommends -q -y \
    intel-opencl-icd \
    libgl1 \
    libtbb12 \
    software-properties-common \
    wget 

# Level Zero
RUN mkdir -p /tmp/gpu && \
 cd /tmp/gpu && \
 wget https://github.com/oneapi-src/level-zero/releases/download/v1.18.5/level-zero_1.18.5+u24.04_amd64.deb && \
 dpkg -i *.deb && \
 rm *.deb

# Intel GPU compute user-space drivers
RUN mkdir -p /tmp/gpu && \
 cd /tmp/gpu && \
 wget https://github.com/intel/intel-graphics-compiler/releases/download/v2.5.6/intel-igc-core-2_2.5.6+18417_amd64.deb && \
 wget https://github.com/intel/intel-graphics-compiler/releases/download/v2.5.6/intel-igc-opencl-2_2.5.6+18417_amd64.deb && \
 wget https://github.com/intel/compute-runtime/releases/download/24.52.32224.5/intel-level-zero-gpu_1.6.32224.5_amd64.deb && \
 wget https://github.com/intel/compute-runtime/releases/download/24.52.32224.5/intel-opencl-icd_24.52.32224.5_amd64.deb && \
 wget https://github.com/intel/compute-runtime/releases/download/24.52.32224.5/libigdgmm12_22.5.5_amd64.deb && \
 dpkg -i *.deb && \
 rm *.deb

# Intel NPU compute user-space drivers
RUN mkdir -p /tmp/npu && \
  cd /tmp/npu && \
  wget https://github.com/intel/linux-npu-driver/releases/download/v1.13.0/intel-driver-compiler-npu_1.13.0.20250131-13074932693_ubuntu24.04_amd64.deb && \
  wget https://github.com/intel/linux-npu-driver/releases/download/v1.13.0/intel-level-zero-npu_1.13.0.20250131-13074932693_ubuntu24.04_amd64.deb && \
  dpkg -i *.deb && \
  rm *.deb

RUN cd /tmp && \
  wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh" && \
  bash Miniforge3-$(uname)-$(uname -m).sh -b && \
  rm Miniforge3-$(uname)-$(uname -m).sh 

RUN conda create -n ov python=3.11* -y && \
  /bin/bash -c "source /root/miniforge3/bin/activate ov && \
  pip install --upgrade pip && \
  pip install openvino-dev[onnx,pytorch]"

ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "ov", "/bin/bash", "/project/scripts/run.sh"]

